"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var elgamal_exports = {};
__export(elgamal_exports, {
  elgamalDecrypt: () => elgamalDecrypt,
  generateSecretKey: () => generateSecretKey,
  toPublicKey: () => toPublicKey,
  toVerificationKey: () => toVerificationKey
});
module.exports = __toCommonJS(elgamal_exports);
var import_bls12381 = require("./bls12381.js");
function elgamalDecrypt(sk, ciphertext) {
  return decrypt(import_bls12381.Scalar.fromBytes(sk), [
    import_bls12381.G1Element.fromBytes(ciphertext[0]),
    import_bls12381.G1Element.fromBytes(ciphertext[1])
  ]).toBytes();
}
function decrypt(sk, encryption) {
  return encryption[1].subtract(encryption[0].multiply(sk));
}
function generateSecretKey() {
  return import_bls12381.Scalar.random().toBytes();
}
function toPublicKey(sk) {
  return import_bls12381.G1Element.generator().multiply(import_bls12381.Scalar.fromBytes(sk)).toBytes();
}
function toVerificationKey(sk) {
  return import_bls12381.G2Element.generator().multiply(import_bls12381.Scalar.fromBytes(sk)).toBytes();
}
//# sourceMappingURL=elgamal.js.map
